import React from 'react';
import type { AIInsights, ContractRiskLevel } from '../../types';
import { SparklesIcon, CheckCircleIcon, XCircleIcon, InfoCircleIcon } from '../icons/IconComponents';

interface AIInsightsPanelProps {
  insights: AIInsights;
}

const riskConfig: Record<ContractRiskLevel, { color: string; bgColor: string; icon: React.FC<{className?:string}> }> = {
  Low: { color: 'text-green-700', bgColor: 'bg-green-100', icon: CheckCircleIcon },
  Medium: { color: 'text-yellow-700', bgColor: 'bg-yellow-100', icon: InfoCircleIcon },
  High: { color: 'text-red-700', bgColor: 'bg-red-100', icon: XCircleIcon },
};

const RiskBadge: React.FC<{ level: ContractRiskLevel }> = ({ level }) => {
  const { color, bgColor, icon: Icon } = riskConfig[level];
  return (
    <div className={`flex items-center p-3 rounded-lg ${bgColor}`}>
      <Icon className={`w-6 h-6 mr-3 ${color}`} />
      <div>
        <p className="text-sm font-semibold text-gray-600">Risk Level</p>
        <p className={`text-lg font-bold ${color}`}>{level}</p>
      </div>
    </div>
  );
};

const AIInsightsPanel: React.FC<AIInsightsPanelProps> = ({ insights }) => {
  return (
    <div className="bg-white rounded-lg shadow p-6 space-y-6">
      <RiskBadge level={insights.riskLevel} />

      <div>
        <h4 className="text-sm font-semibold text-gray-800 flex items-center">
            <SparklesIcon className="w-5 h-5 mr-2 text-primary-500" />
            AI Summary
        </h4>
        <ul className="mt-3 list-disc list-inside space-y-2 text-sm text-gray-600">
            {insights.summary.map((point, index) => (
                <li key={index}>{point}</li>
            ))}
        </ul>
        <p className="text-xs text-gray-400 mt-2 text-right">
            {/* TODO: Integrate with real AI backend */}
            Summary generated by MockAI
        </p>
      </div>
      
      {insights.extractedClauses.length > 0 && (
         <div className="border-t border-gray-200 pt-4">
            <h4 className="text-sm font-semibold text-gray-800">Key Clauses Extracted</h4>
            <div className="mt-3 space-y-3">
                {insights.extractedClauses.map((clause, index) => (
                    <div key={index} className="p-3 bg-gray-50 rounded-md">
                        <p className="font-semibold text-sm text-gray-700">{clause.title}</p>
                        <p className="text-xs text-gray-600 mt-1 line-clamp-2">{clause.content}</p>
                    </div>
                ))}
            </div>
        </div>
      )}

    </div>
  );
};

export default AIInsightsPanel;
